{
    "text": " Java, a high-level multi-paradigm programming language famous for its ability to compile to platform-independent bytecode. It was designed by James Gosling in 1990 at Sun Microsystems. One of its first demonstrations was the Star 7 PDA, which gave birth to the Java mascot, Duke. Today, it's one of the world's most popular programming languages. It powers enterprise web apps with Spring Framework, big data pipelines with Hadoop, mobile apps on Android, and even things like the controller for NASA's Maestro Mars rover. What made Java innovative is that instead of compiling to machine code, like C or C++, it compiles to bytecode that can run on any operating system without recompiling, which is made possible by executing the code with the Java Virtual Machine or JVM. It's both a compiled and interpreted language at the same time. The computer just needs to have the Java runtime environment, or JRE, installed. And most of them do. For developers, this means write once, run anywhere. It's a strongly typed language with a curly brace syntax similar to the C family. However, it provides more high level features like garbage collection, runtime type checking, and reflection. To get started, install the Java development kit, or JDK, then create a file ending in .java. Every Java program starts with a class name, which should also match the file name. The class is required to have a main method. This is where your code will start executing. The method defines a variable by starting with a type, followed by a name and value. We can then print it to the standard output using the built-in system class. Now because we're inside of a class, we define functions as methods on this class. The public keyword means that it can be used outside of this class, and static means that it's a member of the class itself as opposed to an instance of the class. We then provide a type and name, and return a value from it. You can define your own custom classes, which are blueprints for objects, then add attributes and methods to them. Use the new keyword to instantiate an object from the class. It feels very object-oriented, but has evolved to support functional patterns like anonymous lambda methods. When your program is finished, use the compiler to generate a .class file, which contains the bytecode. Now use the Java command to tell the JVM to interpret and run that file. Congratulations, you just built an enterprise-grade application. This has been Java in 100 seconds. Hit subscribe for more short videos like this, and if we somehow get to 100,000 likes on this video, I'll do a full Java tutorial. Thanks for watching, and I will see you in the next one.",
    "segments": [
        {
            "id": 0,
            "seek": 0,
            "start": 0.0,
            "end": 5.12,
            "text": " Java, a high-level multi-paradigm programming language famous for its ability to compile",
            "tokens": [
                50364,
                10745,
                11,
                257,
                1090,
                12,
                12418,
                4825,
                12,
                2181,
                345,
                20181,
                9410,
                2856,
                4618,
                337,
                1080,
                3485,
                281,
                31413,
                50620
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13702170760543259,
            "compression_ratio": 1.530791788856305,
            "no_speech_prob": 0.036775991320610046
        },
        {
            "id": 1,
            "seek": 0,
            "start": 5.12,
            "end": 7.42,
            "text": " to platform-independent bytecode.",
            "tokens": [
                50620,
                281,
                3663,
                12,
                471,
                4217,
                317,
                40846,
                22332,
                13,
                50735
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13702170760543259,
            "compression_ratio": 1.530791788856305,
            "no_speech_prob": 0.036775991320610046
        },
        {
            "id": 2,
            "seek": 0,
            "start": 7.42,
            "end": 11.68,
            "text": " It was designed by James Gosling in 1990 at Sun Microsystems.",
            "tokens": [
                50735,
                467,
                390,
                4761,
                538,
                5678,
                41272,
                1688,
                294,
                13384,
                412,
                6163,
                5818,
                2635,
                9321,
                82,
                13,
                50948
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13702170760543259,
            "compression_ratio": 1.530791788856305,
            "no_speech_prob": 0.036775991320610046
        },
        {
            "id": 3,
            "seek": 0,
            "start": 11.68,
            "end": 16.84,
            "text": " One of its first demonstrations was the Star 7 PDA, which gave birth to the Java mascot,",
            "tokens": [
                50948,
                1485,
                295,
                1080,
                700,
                34714,
                390,
                264,
                5705,
                1614,
                430,
                7509,
                11,
                597,
                2729,
                3965,
                281,
                264,
                10745,
                42339,
                11,
                51206
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13702170760543259,
            "compression_ratio": 1.530791788856305,
            "no_speech_prob": 0.036775991320610046
        },
        {
            "id": 4,
            "seek": 0,
            "start": 16.84,
            "end": 17.84,
            "text": " Duke.",
            "tokens": [
                51206,
                17380,
                13,
                51256
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13702170760543259,
            "compression_ratio": 1.530791788856305,
            "no_speech_prob": 0.036775991320610046
        },
        {
            "id": 5,
            "seek": 0,
            "start": 17.84,
            "end": 20.240000000000002,
            "text": " Today, it's one of the world's most popular programming languages.",
            "tokens": [
                51256,
                2692,
                11,
                309,
                311,
                472,
                295,
                264,
                1002,
                311,
                881,
                3743,
                9410,
                8650,
                13,
                51376
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13702170760543259,
            "compression_ratio": 1.530791788856305,
            "no_speech_prob": 0.036775991320610046
        },
        {
            "id": 6,
            "seek": 0,
            "start": 20.240000000000002,
            "end": 24.52,
            "text": " It powers enterprise web apps with Spring Framework, big data pipelines with Hadoop,",
            "tokens": [
                51376,
                467,
                8674,
                14132,
                3670,
                7733,
                365,
                14013,
                31628,
                1902,
                11,
                955,
                1412,
                40168,
                365,
                389,
                1573,
                404,
                11,
                51590
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13702170760543259,
            "compression_ratio": 1.530791788856305,
            "no_speech_prob": 0.036775991320610046
        },
        {
            "id": 7,
            "seek": 0,
            "start": 24.52,
            "end": 29.52,
            "text": " mobile apps on Android, and even things like the controller for NASA's Maestro Mars rover.",
            "tokens": [
                51590,
                6013,
                7733,
                322,
                8853,
                11,
                293,
                754,
                721,
                411,
                264,
                10561,
                337,
                12077,
                311,
                4042,
                32389,
                9692,
                45767,
                13,
                51840
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13702170760543259,
            "compression_ratio": 1.530791788856305,
            "no_speech_prob": 0.036775991320610046
        },
        {
            "id": 8,
            "seek": 2952,
            "start": 29.52,
            "end": 34.56,
            "text": " What made Java innovative is that instead of compiling to machine code, like C or C++,",
            "tokens": [
                50364,
                708,
                1027,
                10745,
                12999,
                307,
                300,
                2602,
                295,
                715,
                4883,
                281,
                3479,
                3089,
                11,
                411,
                383,
                420,
                383,
                25472,
                11,
                50616
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13417955980462543,
            "compression_ratio": 1.6151202749140894,
            "no_speech_prob": 0.006515149492770433
        },
        {
            "id": 9,
            "seek": 2952,
            "start": 34.56,
            "end": 39.16,
            "text": " it compiles to bytecode that can run on any operating system without recompiling, which",
            "tokens": [
                50616,
                309,
                715,
                4680,
                281,
                40846,
                22332,
                300,
                393,
                1190,
                322,
                604,
                7447,
                1185,
                1553,
                48000,
                4883,
                11,
                597,
                50846
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13417955980462543,
            "compression_ratio": 1.6151202749140894,
            "no_speech_prob": 0.006515149492770433
        },
        {
            "id": 10,
            "seek": 2952,
            "start": 39.16,
            "end": 44.04,
            "text": " is made possible by executing the code with the Java Virtual Machine or JVM.",
            "tokens": [
                50846,
                307,
                1027,
                1944,
                538,
                32368,
                264,
                3089,
                365,
                264,
                10745,
                23887,
                22155,
                420,
                508,
                53,
                44,
                13,
                51090
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13417955980462543,
            "compression_ratio": 1.6151202749140894,
            "no_speech_prob": 0.006515149492770433
        },
        {
            "id": 11,
            "seek": 2952,
            "start": 44.04,
            "end": 47.16,
            "text": " It's both a compiled and interpreted language at the same time.",
            "tokens": [
                51090,
                467,
                311,
                1293,
                257,
                36548,
                293,
                26749,
                2856,
                412,
                264,
                912,
                565,
                13,
                51246
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13417955980462543,
            "compression_ratio": 1.6151202749140894,
            "no_speech_prob": 0.006515149492770433
        },
        {
            "id": 12,
            "seek": 2952,
            "start": 47.16,
            "end": 51.68,
            "text": " The computer just needs to have the Java runtime environment, or JRE, installed.",
            "tokens": [
                51246,
                440,
                3820,
                445,
                2203,
                281,
                362,
                264,
                10745,
                34474,
                2823,
                11,
                420,
                508,
                3850,
                11,
                8899,
                13,
                51472
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13417955980462543,
            "compression_ratio": 1.6151202749140894,
            "no_speech_prob": 0.006515149492770433
        },
        {
            "id": 13,
            "seek": 2952,
            "start": 51.68,
            "end": 52.68,
            "text": " And most of them do.",
            "tokens": [
                51472,
                400,
                881,
                295,
                552,
                360,
                13,
                51522
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13417955980462543,
            "compression_ratio": 1.6151202749140894,
            "no_speech_prob": 0.006515149492770433
        },
        {
            "id": 14,
            "seek": 2952,
            "start": 52.68,
            "end": 55.28,
            "text": " For developers, this means write once, run anywhere.",
            "tokens": [
                51522,
                1171,
                8849,
                11,
                341,
                1355,
                2464,
                1564,
                11,
                1190,
                4992,
                13,
                51652
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13417955980462543,
            "compression_ratio": 1.6151202749140894,
            "no_speech_prob": 0.006515149492770433
        },
        {
            "id": 15,
            "seek": 5528,
            "start": 55.56,
            "end": 59.84,
            "text": " It's a strongly typed language with a curly brace syntax similar to the C family.",
            "tokens": [
                50378,
                467,
                311,
                257,
                10613,
                33941,
                2856,
                365,
                257,
                32066,
                38458,
                28431,
                2531,
                281,
                264,
                383,
                1605,
                13,
                50592
            ],
            "temperature": 0.0,
            "avg_logprob": -0.14240544302421704,
            "compression_ratio": 1.5699658703071673,
            "no_speech_prob": 0.008626329712569714
        },
        {
            "id": 16,
            "seek": 5528,
            "start": 59.84,
            "end": 65.0,
            "text": " However, it provides more high level features like garbage collection, runtime type checking,",
            "tokens": [
                50592,
                2908,
                11,
                309,
                6417,
                544,
                1090,
                1496,
                4122,
                411,
                14150,
                5765,
                11,
                34474,
                2010,
                8568,
                11,
                50850
            ],
            "temperature": 0.0,
            "avg_logprob": -0.14240544302421704,
            "compression_ratio": 1.5699658703071673,
            "no_speech_prob": 0.008626329712569714
        },
        {
            "id": 17,
            "seek": 5528,
            "start": 65.0,
            "end": 66.0,
            "text": " and reflection.",
            "tokens": [
                50850,
                293,
                12914,
                13,
                50900
            ],
            "temperature": 0.0,
            "avg_logprob": -0.14240544302421704,
            "compression_ratio": 1.5699658703071673,
            "no_speech_prob": 0.008626329712569714
        },
        {
            "id": 18,
            "seek": 5528,
            "start": 66.0,
            "end": 70.84,
            "text": " To get started, install the Java development kit, or JDK, then create a file ending in",
            "tokens": [
                50900,
                1407,
                483,
                1409,
                11,
                3625,
                264,
                10745,
                3250,
                8260,
                11,
                420,
                37082,
                42,
                11,
                550,
                1884,
                257,
                3991,
                8121,
                294,
                51142
            ],
            "temperature": 0.0,
            "avg_logprob": -0.14240544302421704,
            "compression_ratio": 1.5699658703071673,
            "no_speech_prob": 0.008626329712569714
        },
        {
            "id": 19,
            "seek": 5528,
            "start": 70.84,
            "end": 71.84,
            "text": " .java.",
            "tokens": [
                51142,
                2411,
                73,
                4061,
                13,
                51192
            ],
            "temperature": 0.0,
            "avg_logprob": -0.14240544302421704,
            "compression_ratio": 1.5699658703071673,
            "no_speech_prob": 0.008626329712569714
        },
        {
            "id": 20,
            "seek": 5528,
            "start": 71.84,
            "end": 75.84,
            "text": " Every Java program starts with a class name, which should also match the file name.",
            "tokens": [
                51192,
                2048,
                10745,
                1461,
                3719,
                365,
                257,
                1508,
                1315,
                11,
                597,
                820,
                611,
                2995,
                264,
                3991,
                1315,
                13,
                51392
            ],
            "temperature": 0.0,
            "avg_logprob": -0.14240544302421704,
            "compression_ratio": 1.5699658703071673,
            "no_speech_prob": 0.008626329712569714
        },
        {
            "id": 21,
            "seek": 5528,
            "start": 75.84,
            "end": 78.28,
            "text": " The class is required to have a main method.",
            "tokens": [
                51392,
                440,
                1508,
                307,
                4739,
                281,
                362,
                257,
                2135,
                3170,
                13,
                51514
            ],
            "temperature": 0.0,
            "avg_logprob": -0.14240544302421704,
            "compression_ratio": 1.5699658703071673,
            "no_speech_prob": 0.008626329712569714
        },
        {
            "id": 22,
            "seek": 5528,
            "start": 78.28,
            "end": 80.64,
            "text": " This is where your code will start executing.",
            "tokens": [
                51514,
                639,
                307,
                689,
                428,
                3089,
                486,
                722,
                32368,
                13,
                51632
            ],
            "temperature": 0.0,
            "avg_logprob": -0.14240544302421704,
            "compression_ratio": 1.5699658703071673,
            "no_speech_prob": 0.008626329712569714
        },
        {
            "id": 23,
            "seek": 8064,
            "start": 80.64,
            "end": 85.48,
            "text": " The method defines a variable by starting with a type, followed by a name and value.",
            "tokens": [
                50364,
                440,
                3170,
                23122,
                257,
                7006,
                538,
                2891,
                365,
                257,
                2010,
                11,
                6263,
                538,
                257,
                1315,
                293,
                2158,
                13,
                50606
            ],
            "temperature": 0.0,
            "avg_logprob": -0.14067062433215155,
            "compression_ratio": 1.7873015873015874,
            "no_speech_prob": 0.4355687201023102
        },
        {
            "id": 24,
            "seek": 8064,
            "start": 85.48,
            "end": 89.28,
            "text": " We can then print it to the standard output using the built-in system class.",
            "tokens": [
                50606,
                492,
                393,
                550,
                4482,
                309,
                281,
                264,
                3832,
                5598,
                1228,
                264,
                3094,
                12,
                259,
                1185,
                1508,
                13,
                50796
            ],
            "temperature": 0.0,
            "avg_logprob": -0.14067062433215155,
            "compression_ratio": 1.7873015873015874,
            "no_speech_prob": 0.4355687201023102
        },
        {
            "id": 25,
            "seek": 8064,
            "start": 89.28,
            "end": 93.56,
            "text": " Now because we're inside of a class, we define functions as methods on this class.",
            "tokens": [
                50796,
                823,
                570,
                321,
                434,
                1854,
                295,
                257,
                1508,
                11,
                321,
                6964,
                6828,
                382,
                7150,
                322,
                341,
                1508,
                13,
                51010
            ],
            "temperature": 0.0,
            "avg_logprob": -0.14067062433215155,
            "compression_ratio": 1.7873015873015874,
            "no_speech_prob": 0.4355687201023102
        },
        {
            "id": 26,
            "seek": 8064,
            "start": 93.56,
            "end": 97.64,
            "text": " The public keyword means that it can be used outside of this class, and static means that",
            "tokens": [
                51010,
                440,
                1908,
                20428,
                1355,
                300,
                309,
                393,
                312,
                1143,
                2380,
                295,
                341,
                1508,
                11,
                293,
                13437,
                1355,
                300,
                51214
            ],
            "temperature": 0.0,
            "avg_logprob": -0.14067062433215155,
            "compression_ratio": 1.7873015873015874,
            "no_speech_prob": 0.4355687201023102
        },
        {
            "id": 27,
            "seek": 8064,
            "start": 97.64,
            "end": 101.56,
            "text": " it's a member of the class itself as opposed to an instance of the class.",
            "tokens": [
                51214,
                309,
                311,
                257,
                4006,
                295,
                264,
                1508,
                2564,
                382,
                8851,
                281,
                364,
                5197,
                295,
                264,
                1508,
                13,
                51410
            ],
            "temperature": 0.0,
            "avg_logprob": -0.14067062433215155,
            "compression_ratio": 1.7873015873015874,
            "no_speech_prob": 0.4355687201023102
        },
        {
            "id": 28,
            "seek": 8064,
            "start": 101.56,
            "end": 104.92,
            "text": " We then provide a type and name, and return a value from it.",
            "tokens": [
                51410,
                492,
                550,
                2893,
                257,
                2010,
                293,
                1315,
                11,
                293,
                2736,
                257,
                2158,
                490,
                309,
                13,
                51578
            ],
            "temperature": 0.0,
            "avg_logprob": -0.14067062433215155,
            "compression_ratio": 1.7873015873015874,
            "no_speech_prob": 0.4355687201023102
        },
        {
            "id": 29,
            "seek": 8064,
            "start": 104.92,
            "end": 109.44,
            "text": " You can define your own custom classes, which are blueprints for objects, then add attributes",
            "tokens": [
                51578,
                509,
                393,
                6964,
                428,
                1065,
                2375,
                5359,
                11,
                597,
                366,
                888,
                23547,
                47523,
                337,
                6565,
                11,
                550,
                909,
                17212,
                51804
            ],
            "temperature": 0.0,
            "avg_logprob": -0.14067062433215155,
            "compression_ratio": 1.7873015873015874,
            "no_speech_prob": 0.4355687201023102
        },
        {
            "id": 30,
            "seek": 10944,
            "start": 109.44,
            "end": 110.75999999999999,
            "text": " and methods to them.",
            "tokens": [
                50364,
                293,
                7150,
                281,
                552,
                13,
                50430
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13830769580343497,
            "compression_ratio": 1.6449704142011834,
            "no_speech_prob": 0.021943960338830948
        },
        {
            "id": 31,
            "seek": 10944,
            "start": 110.75999999999999,
            "end": 113.84,
            "text": " Use the new keyword to instantiate an object from the class.",
            "tokens": [
                50430,
                8278,
                264,
                777,
                20428,
                281,
                9836,
                13024,
                364,
                2657,
                490,
                264,
                1508,
                13,
                50584
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13830769580343497,
            "compression_ratio": 1.6449704142011834,
            "no_speech_prob": 0.021943960338830948
        },
        {
            "id": 32,
            "seek": 10944,
            "start": 113.84,
            "end": 118.48,
            "text": " It feels very object-oriented, but has evolved to support functional patterns like anonymous",
            "tokens": [
                50584,
                467,
                3417,
                588,
                2657,
                12,
                27414,
                11,
                457,
                575,
                14178,
                281,
                1406,
                11745,
                8294,
                411,
                24932,
                50816
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13830769580343497,
            "compression_ratio": 1.6449704142011834,
            "no_speech_prob": 0.021943960338830948
        },
        {
            "id": 33,
            "seek": 10944,
            "start": 118.48,
            "end": 119.52,
            "text": " lambda methods.",
            "tokens": [
                50816,
                13607,
                7150,
                13,
                50868
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13830769580343497,
            "compression_ratio": 1.6449704142011834,
            "no_speech_prob": 0.021943960338830948
        },
        {
            "id": 34,
            "seek": 10944,
            "start": 119.52,
            "end": 124.2,
            "text": " When your program is finished, use the compiler to generate a .class file, which contains the",
            "tokens": [
                50868,
                1133,
                428,
                1461,
                307,
                4335,
                11,
                764,
                264,
                31958,
                281,
                8460,
                257,
                2411,
                11665,
                3991,
                11,
                597,
                8306,
                264,
                51102
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13830769580343497,
            "compression_ratio": 1.6449704142011834,
            "no_speech_prob": 0.021943960338830948
        },
        {
            "id": 35,
            "seek": 10944,
            "start": 124.2,
            "end": 125.2,
            "text": " bytecode.",
            "tokens": [
                51102,
                40846,
                22332,
                13,
                51152
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13830769580343497,
            "compression_ratio": 1.6449704142011834,
            "no_speech_prob": 0.021943960338830948
        },
        {
            "id": 36,
            "seek": 10944,
            "start": 125.2,
            "end": 129.44,
            "text": " Now use the Java command to tell the JVM to interpret and run that file.",
            "tokens": [
                51152,
                823,
                764,
                264,
                10745,
                5622,
                281,
                980,
                264,
                508,
                53,
                44,
                281,
                7302,
                293,
                1190,
                300,
                3991,
                13,
                51364
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13830769580343497,
            "compression_ratio": 1.6449704142011834,
            "no_speech_prob": 0.021943960338830948
        },
        {
            "id": 37,
            "seek": 10944,
            "start": 129.44,
            "end": 132.68,
            "text": " Congratulations, you just built an enterprise-grade application.",
            "tokens": [
                51364,
                9694,
                11,
                291,
                445,
                3094,
                364,
                14132,
                12,
                8692,
                3861,
                13,
                51526
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13830769580343497,
            "compression_ratio": 1.6449704142011834,
            "no_speech_prob": 0.021943960338830948
        },
        {
            "id": 38,
            "seek": 10944,
            "start": 132.68,
            "end": 134.84,
            "text": " This has been Java in 100 seconds.",
            "tokens": [
                51526,
                639,
                575,
                668,
                10745,
                294,
                2319,
                3949,
                13,
                51634
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13830769580343497,
            "compression_ratio": 1.6449704142011834,
            "no_speech_prob": 0.021943960338830948
        },
        {
            "id": 39,
            "seek": 10944,
            "start": 134.84,
            "end": 139.04,
            "text": " Hit subscribe for more short videos like this, and if we somehow get to 100,000 likes on",
            "tokens": [
                51634,
                9217,
                3022,
                337,
                544,
                2099,
                2145,
                411,
                341,
                11,
                293,
                498,
                321,
                6063,
                483,
                281,
                2319,
                11,
                1360,
                5902,
                322,
                51844
            ],
            "temperature": 0.0,
            "avg_logprob": -0.13830769580343497,
            "compression_ratio": 1.6449704142011834,
            "no_speech_prob": 0.021943960338830948
        },
        {
            "id": 40,
            "seek": 13904,
            "start": 139.04,
            "end": 141.4,
            "text": " this video, I'll do a full Java tutorial.",
            "tokens": [
                50364,
                341,
                960,
                11,
                286,
                603,
                360,
                257,
                1577,
                10745,
                7073,
                13,
                50482
            ],
            "temperature": 0.0,
            "avg_logprob": -0.14008808135986328,
            "compression_ratio": 1.0769230769230769,
            "no_speech_prob": 0.6701628565788269
        },
        {
            "id": 41,
            "seek": 13904,
            "start": 141.4,
            "end": 144.0,
            "text": " Thanks for watching, and I will see you in the next one.",
            "tokens": [
                50482,
                2561,
                337,
                1976,
                11,
                293,
                286,
                486,
                536,
                291,
                294,
                264,
                958,
                472,
                13,
                50612
            ],
            "temperature": 0.0,
            "avg_logprob": -0.14008808135986328,
            "compression_ratio": 1.0769230769230769,
            "no_speech_prob": 0.6701628565788269
        }
    ],
    "language": "en"
}